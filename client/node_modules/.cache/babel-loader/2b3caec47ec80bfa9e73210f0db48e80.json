{"ast":null,"code":"var _jsxFileName = \"/home/bill/Personal/assignment/client/src/pages/TaskViewEdit.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { format } from \"date-fns\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from 'react-router-dom';\nimport { config } from \"../utils/header-config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskViewEdit = () => {\n  _s();\n\n  const [formData, setFormData] = useState({});\n  const [formError, setFormError] = useState(\"\");\n  const [task, setTask] = useState(null);\n  const history = useHistory();\n  const params = useParams();\n  const {\n    id\n  } = params;\n  useEffect(() => {\n    getTask(id);\n  }, [history]);\n\n  const getTask = async id => {\n    const {\n      data\n    } = await axios.get(`/api/todos/${id}`, config);\n\n    if (data) {\n      setTask(data);\n    }\n  };\n\n  const handleFormInputChange = e => {\n    const {\n      name,\n      value\n    } = e.currentTarget;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  };\n\n  const editTask = async e => {\n    e.preventDefault();\n\n    if (!task.title || !task.description) {\n      setFormError(\"Please provide all fields\");\n      setTimeout(() => {\n        setFormError(\"\");\n      }, 3000);\n      return;\n    }\n\n    await axios.patch(`/api/todos/${id}`, formData, config).then(_ref => {\n      let {\n        data\n      } = _ref;\n      history.push(\"/\");\n    }).catch(error => {\n      return setFormError(\"Please verify task details\");\n    });\n  };\n\n  const goHome = () => {\n    history.push(\"/\");\n  };\n\n  const formatedTaskDate = d => {\n    if (d) {\n      const taskDate = new Date(d);\n      const formatedDate = format(taskDate, \"MMM do, yyyy H:mma\");\n      return formatedDate;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: task && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: task === null || task === void 0 ? void 0 : task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: formError && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: formError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"title\",\n            defaultValue: task === null || task === void 0 ? void 0 : task.title,\n            name: \"title\",\n            onChange: handleFormInputChange,\n            placeholder: \"title...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"description\",\n            defaultValue: task === null || task === void 0 ? void 0 : task.description,\n            onChange: handleFormInputChange,\n            placeholder: \"description...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"created\",\n            children: \"Created:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            disabled: true,\n            type: \"created\",\n            defaultValue: formatedTaskDate(task === null || task === void 0 ? void 0 : task.created),\n            name: \"created\",\n            placeholder: \"created...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn-create\",\n            onClick: editTask,\n            children: \"Edit Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn-back\",\n            onClick: goHome,\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TaskViewEdit, \"3YlMe7aqoXoA5DgEoBlrTwzo7NQ=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = TaskViewEdit;\nexport default TaskViewEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskViewEdit\");","map":{"version":3,"sources":["/home/bill/Personal/assignment/client/src/pages/TaskViewEdit.js"],"names":["axios","format","React","useEffect","useState","useParams","useHistory","config","TaskViewEdit","formData","setFormData","formError","setFormError","task","setTask","history","params","id","getTask","data","get","handleFormInputChange","e","name","value","currentTarget","editTask","preventDefault","title","description","setTimeout","patch","then","push","catch","error","goHome","formatedTaskDate","d","taskDate","Date","formatedDate","created"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { format } from \"date-fns\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from 'react-router-dom';\nimport { config } from \"../utils/header-config\";\n\nconst TaskViewEdit = () => {\n    const [formData, setFormData] = useState({})\n    const [formError, setFormError] = useState(\"\")\n    const [task, setTask] = useState(null)\n    const history = useHistory()\n\n    const params = useParams()\n    const {id} = params\n\n    useEffect(() => {\n        getTask(id)\n    }, [history])\n\n    const getTask = async(id) => {\n        const {data} = await axios.get(`/api/todos/${id}`, config)\n        if(data){\n            setTask(data)\n        }\n    }\n\n    const handleFormInputChange = (e) => {\n        const {name, value} = e.currentTarget;\n        setFormData({...formData, [name]: value})\n    }\n\n    const editTask = async(e) => {\n        e.preventDefault()\n        if(!task.title || !task.description){\n            setFormError(\"Please provide all fields\")\n            setTimeout(() => {\n                setFormError(\"\")\n            }, 3000)\n            return\n        }\n        await axios.patch(`/api/todos/${id}`, formData, config).then(({data}) => {\n            history.push(\"/\")\n        }).catch((error) => {\n            return setFormError(\"Please verify task details\")\n        })\n    }\n\n    const goHome = () => {\n        history.push(\"/\")\n    }\n\n    const formatedTaskDate = (d) => {\n        if(d){\n            const taskDate = new Date(d);\n            const formatedDate = format(taskDate, \"MMM do, yyyy H:mma\")\n            return formatedDate;\n        }\n    }\n\n    return (\n        <React.Fragment>\n            {task && (\n                <div className=\"form-wrapper\">\n                    <form>\n                        <h1>{task?.title}</h1>\n                        <div className=\"form-group\">\n                            {formError && (\n                                <span className=\"error\">{formError}</span>\n                            )}\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"title\">Title:</label>\n                            <input type=\"title\" defaultValue={task?.title}  name=\"title\" onChange={handleFormInputChange} placeholder=\"title...\" ></input>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"description\">Description:</label>\n                            <textarea name=\"description\" defaultValue={task?.description} onChange={handleFormInputChange} placeholder=\"description...\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"created\">Created:</label>\n                            <input disabled type=\"created\" defaultValue={formatedTaskDate(task?.created)} name=\"created\" placeholder=\"created...\" ></input>\n                        </div>\n                        <div className=\"form-group\">\n                            <button type=\"submit\" className=\"btn-create\" onClick={editTask}>Edit Task</button>\n                                <br/>\n                            <button type=\"submit\" className=\"btn-back\" onClick={goHome}>Back</button>\n                        </div>\n                    </form>\n                </div>\n            )}\n        </React.Fragment>\n    )\n}\n\nexport default TaskViewEdit"]},"metadata":{},"sourceType":"module"}